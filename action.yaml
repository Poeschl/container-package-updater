name: "Container Package Updater"
description: "Scans a given Containerfile and opens PRs to update outdated packages"
inputs:
  token:
    description: "The GitHub token to use for PR creation"
    required: true
  repositoryWorkspace:
    description: "The path to the workspace of the checked out project. Will be set via 'github.workspace'"
    required: false
    default: /github/workspace
  containerFile:
    description: "The container file to check"
    required: true
  repository:
    description: "The repository update PRs should be created in"
    required: false
    default: ${{ github.repository }}
  osVersion:
    description: 'The OS version to use for the version check. Example "3.18" for Alpine'
    required: false
    default: "3.18"
  architectures:
    description: "The architectures to check. (Comma separated in string)"
    required: false
    default: "x86_64"
  dryRun:
    description: "If true, no PR will be created"
    required: false
    default: "false"
runs:
  using: "docker"
  image: Dockerfile
  args:
    - "--token"
    - ${{ inputs.token }}
    - "--containerFile"
    - ${{ inputs.containerFile }}
    - "--repositoryWorkspace"
    - ${{ inputs.repositoryWorkspace }}
    - "--repository"
    - ${{ inputs.repository }}
    - "--osVersion"
    - ${{ inputs.osVersion }}
    - "--architecture"
    - ${{ inputs.architectures }}
    - ${{ inputs.dryRun == 'true' && '--dryRun' || null }}
